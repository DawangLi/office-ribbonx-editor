# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - 'v*'
  paths:
    exclude:
    - LICENSE
    - THIRD-PARTY-NOTICES
    - '**/*.md'

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: 'PreBuild.ps1'
    arguments: '"$(Build.BuildNumber)"'

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AssemblyBuildNumber="$(MSBuildNumber)" /p:AssemblyRevision="$(MSRevision)"'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Copy Files
# Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
- task: CopyFiles@2
  inputs:
    sourceFolder: ''
    contents: 'CustomUIEditor/bin/$(buildConfiguration)/**.exe'  # Only copy the main executable in case users want to download it directly
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true # Optional
    flattenFolders: true # Optional
    #overWrite: false # Optional

# Publish Build Artifacts
# Publish build artifacts to Azure Pipelines/TFS or a file share
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'WindowsBinary' 
    publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional

- task: GithubRelease@0 
  displayName: 'Create GitHub Release'   
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')   
  inputs:
    action: 'create'
    target: '$(Build.SourceVersion)'
    githubConnection: 'fernandreu-pat'
    repositoryName: 'fernandreu/wpf-custom-ui-editor'
    assets: '$(Build.ArtifactStagingDirectory)/*.exe'
    tagSource: 'manual'
    tag: '$(Build.SourceBranchName)'
    title: 'Custom UI Editor $(Build.SourceBranchName) - Build $(Build.BuildNumber)'
    releaseNotesSource: 'input'
    addChangelog: true
    isDraft: true
